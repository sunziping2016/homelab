name: "Build"
on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            accept-flake-config = true
      - uses: DeterminateSystems/magic-nix-cache-action@v7
      - uses: cachix/cachix-action@v15
        with:
          name: sunziping2016
          # Create a personal auth token from https://app.cachix.org/personal-auth-tokens,
          # login to cachix, and then generate a signing key and provision it.
          #     cachix authtoken --stdin  # paste personal auth token
          #     cachix generate-keypair sunziping2016
          #     gh secret set CACHIX_SIGNING_KEY  # paste signing key
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
      - name: Run nix flake show
        run: nix flake show --all-systems
      - name: Run nix flake check
        run: nix flake check --all-systems
      - name: Run nix build
        run: |
          set -euo pipefail
          IFS=$'\n'
          system="$(nix eval --impure --raw  --expr "builtins.currentSystem")"
          checks="$(nix eval --json ".#checks.\"$system\"" --apply builtins.attrNames)"
          for check in $(echo "$checks" | jq -r '.[]'); do
            echo "> Building .#checks.\"$system\".\"$check\""
            nix build -L ".#checks.\"$system\".\"$check\""
          done
